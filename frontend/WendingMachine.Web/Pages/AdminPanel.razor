@page "/admin"
@inject HttpClient Http 
@inject IJSRuntime JS
@if (string.IsNullOrEmpty(SecretKode))
{
    <label>Необходимо указать секретный ключ в строке запроса (/admin?secretKode=Ключ)</label>
}
else
{
    if (machines is null || drinks is null || coins is null)
    {
        <label>Loading...</label>
    }
    else
    {
        <div class="accordion" id="accordionExample">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                        Монеты
                    </button>
                </h2>
                <div id="collapseOne" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <table class="table">
                            <thead class="fw-bold">
                                <tr>
                                    <th>Идентификатор</th>
                                    <th>Номинал</th>
                                    <th>Доступность</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var coin in coins)
                                {
                                    <tr>
                                        <td>@coin.Id</td>
                                        <td>@coin.Denomination</td>
                                        <td>@coin.isAvailable</td>
                                        <td>
                                            <button class="btn btn-primary" @onclick="async()=>await ChangeAvailableCoin(coin)">Поменять доступность</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <a class="btn btn-info" href="/admin/coin?SecretKode=@SecretKode">Создать</a>"
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="true" aria-controls="collapseTwo">
                        Напитки
                    </button>
                </h2>
                <div id="collapseTwo" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <table class="table">
                            <thead class="fw-bold">
                                <tr>
                                    <th>Идентификатор</th>
                                    <th>Название</th>
                                    <th>Цена</th>
                                    <th>Количество</th>
                                    <th>Доступность</th>
                                    <th>Картинка</th>
                                    <th>Идентификатор машины</th>
                                    <th>Действия</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var drink in drinks)
                                {
                                    <tr>
                                        <td>@drink.Id</td>
                                        <td>@drink.Name</td>
                                        <td>@drink.Price</td>
                                        <td>@drink.Count</td>
                                        <td>@drink.isAvailable</td>
                                        <td><img style="max-height:150px;max-width:150px;" src="@drink.ImagePath" alt="@drink.Name" /></td>
                                        <td>@drink.MachineId</td>
                                        <td>
                                            <a href="/admin/drink/@drink.Id?SecretKode=@SecretKode" class="btn btn-primary">Редактировать</a>
                                            <button class="btn btn-danger" @onclick="async()=>await DeleteDrink(drink.Id)">Удалить</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <a class="btn btn-info" href="/admin/drink?SecretKode=@SecretKode">Создать</a>
                    </div>
                </div>
            </div>
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="true" aria-controls="collapseThree">
                        Машины
                    </button>
                </h2>
                <div id="collapseThree" class="accordion-collapse collapse show" data-bs-parent="#accordionExample">
                    <div class="accordion-body">
                        <table class="table">
                            <thead class="fw-bold">
                                <tr>
                                    <th>Идентификатор</th>
                                    <th>Баланс</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var machine in machines)
                                {
                                    <tr>
                                        <td>@machine.Id</td>
                                        <td>@machine.Balance</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }
}
@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string SecretKode{ get; set; }

    public Machine[] machines;

    public Drink[] drinks;

    public Coin[] coins;

    protected override async Task OnInitializedAsync()
    {
        machines = await Http.GetFromJsonAsync<Machine[]>("/api/v1/Machine/machines");
        drinks = await Http.GetFromJsonAsync<Drink[]>("/api/v1/Drink/drinks");
        coins = await Http.GetFromJsonAsync<Coin[]>("/api/v1/Coin/coins");
    }
    public async Task ReloadData()
    {
        try
        {
            machines = await Http.GetFromJsonAsync<Machine[]>("/api/v1/Machine/machines");
            drinks = await Http.GetFromJsonAsync<Drink[]>("/api/v1/Drink/drinks");
            coins = await Http.GetFromJsonAsync<Coin[]>("/api/v1/Coin/coins");
            ShouldRender();
        }
        catch(Exception ex)
        {
            await ShowMessage($"Произошла ошибка: {ex.Message}");
        }
    }
    public async Task ChangeAvailableCoin(Coin coin)
    {
        var responce = await Http.GetAsync($"/api/v1/Coin/coins/{coin.Id}/toggle?Key={SecretKode}");
        if (!responce.IsSuccessStatusCode) await ShowMessage("Не удалось помменять статус, возможно вы указали неверный код");
        else await ReloadData();
    }
    public async Task DeleteDrink(int drinkId)
    {
        var responce = await Http.DeleteAsync($"/api/v1/Drink/drink/{drinkId}?Key={SecretKode}");
        if (!responce.IsSuccessStatusCode) await ShowMessage("Не удалось удалить напиток, возможно указан не правильный код");
        else await ReloadData();
    }
    public async Task ShowMessage(string message)
    {
        await JS.InvokeVoidAsync("showChange", message);
    }
}
